<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Know Why</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://landys.github.io/"/>
  <updated>2016-12-07T14:20:21.000Z</updated>
  <id>http://landys.github.io/</id>
  
  <author>
    <name>Landys</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Shadowsocks代理简介和配置</title>
    <link href="http://landys.github.io/2016/12/Shadowsocks%E4%BB%A3%E7%90%86%E7%AE%80%E4%BB%8B%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    <id>http://landys.github.io/2016/12/Shadowsocks代理简介和配置/</id>
    <published>2016-12-06T08:54:13.000Z</published>
    <updated>2016-12-07T14:20:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Shadowsocks简介"><a href="#Shadowsocks简介" class="headerlink" title="Shadowsocks简介"></a>Shadowsocks简介</h1><p><a href="https://github.com/shadowsocks/shadowsocks" target="_blank" rel="external">Shadowsocks</a>，中文翻译为<code>影梭</code>，是一个开源的轻量级的代理工具，可提供安全稳定的Socks5代理。该项目由国人<a href="https://github.com/clowwindy" target="_blank" rel="external">clowwindy</a>开源。至于当时和<a href="https://github.com/breakwa11" target="_blank" rel="external">breakwa11</a>的争议以及喝茶事件，各位可自行google。</p>
<p>Shadowsocks分为服务端和客户端。服务端安装在提供网络流量出口的服务器上，客户端安装在本地或代理用户所在网络环境中的机器上，提供Socks5代理服务。目前客户端已经支持多种平台，既包括Windows，Linux，Mac OS X等PC系统，也包括iOS，Android等移动平台，也就是说配置一个代理，可以非常方便地为多种终端设备使用，有一种毕其功于一役的痛快感觉。服务端和客户端之间通过类似于Socks5但更简单且加密的协议进行通讯，同时支持TCP和UDP连接。</p>
<h2 id="Shadowsocks-VS-SSH-Tunnel"><a href="#Shadowsocks-VS-SSH-Tunnel" class="headerlink" title="Shadowsocks VS SSH Tunnel"></a>Shadowsocks VS SSH Tunnel</h2><p>Shadowsocks相对于SSH Tunnel在穿越Firewall的优势在于：</p>
<ol>
<li><p>SSH Tunnel创建隧道使用的是长连接，一旦受到墙的干扰，连接会被中断需要重连。而Shadowsocks连接是实时模式，只有在有数据访问的时候才会创建隧道，并且不需要保持连接，其抗干扰和丢包容错的能力都更强，更适合国情。</p>
</li>
<li><p>SSH Tunnel的连接特征相对明显，容易被Firewall通过特征分析进行定向干扰；相对而言Shadowsocks没有明显特征码，被干扰的可能性更小。</p>
</li>
</ol>
<h1 id="Shadowsocks安装和配置"><a href="#Shadowsocks安装和配置" class="headerlink" title="Shadowsocks安装和配置"></a>Shadowsocks安装和配置</h1><h2 id="服务端安装和配置"><a href="#服务端安装和配置" class="headerlink" title="服务端安装和配置"></a>服务端安装和配置</h2><p>由于Shadowsocks基于python实现，可以方便地使用<code>pip</code>安装。至于如何安装python环境和pip包管理工具，可自行google。</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip <span class="keyword">install</span> shadowsocks</div></pre></td></tr></table></figure>
<p>服务端的运行也非常简单，可以直接一句命令行启动，具体见<a href="https://github.com/shadowsocks/shadowsocks/wiki/Shadowsocks-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E" target="_blank" rel="external">文档</a>。也可以通过配置文件的方式来设置运行参数。配置文件可放在任意目录，这里保存为<code>~/shadowsocks/config.json</code>。</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"server"</span>:<span class="string">"remote-server-ip"</span>,</div><div class="line">    <span class="attr">"server_port"</span>:<span class="number">7777</span>,</div><div class="line">    <span class="attr">"local_address"</span>:<span class="string">"127.0.0.1"</span>,</div><div class="line">    <span class="attr">"local_port"</span>:<span class="number">1080</span>,</div><div class="line">    <span class="attr">"password"</span>:<span class="string">"your-password"</span>,</div><div class="line">    <span class="attr">"timeout"</span>:<span class="number">300</span>,</div><div class="line">    <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span>,</div><div class="line">    <span class="attr">"fast_open"</span>:<span class="literal">false</span>,</div><div class="line">    <span class="attr">"workers"</span>:<span class="number">1</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>配置内容非常直观，注册修改<code>server</code>和<code>password</code>，属性含义可参考<a href="https://github.com/shadowsocks/shadowsocks/wiki/Configuration-via-Config-File" target="_blank" rel="external">官方文档</a>。接着以后台运行的方式启动：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssserver -c ~/shadowsocks/config<span class="selector-class">.json</span> -d start</div></pre></td></tr></table></figure>
<p>停止服务：</p>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssserver -c ~/shadowsocks/<span class="built_in">config</span>.json -d <span class="built_in">stop</span></div></pre></td></tr></table></figure>
<h2 id="客户端安装和配置"><a href="#客户端安装和配置" class="headerlink" title="客户端安装和配置"></a>客户端安装和配置</h2><p>Shadowsocks针对不同平台有不同的图形界面客户端。PC端客户端支持基于PAC的自动代理模式，有<a href="https://github.com/shadowsocks/shadowsocks-iOS/releases" target="_blank" rel="external">MAC版</a>，<a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="external">Windows版</a>等。移动端ios/android可以在各自应用市场下载，支持分应用的代理设置。各种配置都非常直观，这里就不多说了。</p>
<p>除了图形界面客户端，本人更喜欢直接在命令行里启动<code>sslocal</code>来启动本机的socks5代理。这里以Mac OS为例。</p>
<p>同样使用pip安装。客户端命令为<code>sslocal</code>。可以直接使用与服务端相同的配置文件运行，也可以用<code>nohup</code>后台运行。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">pip install shadowsocks</div><div class="line">sslocal -c ~/shadowsocks/config<span class="selector-class">.json</span></div><div class="line">nohup sslocal -c ~/shadowsocks/config<span class="selector-class">.json</span> &amp;</div></pre></td></tr></table></figure>
<p>此时一切就绪，其他应用就可以使用Socks5代理<code>127.0.0.1:1080</code>，最终通过服务端出口来访问网络了。对于Chrome，我们可以使用扩展<code>SwitchyOmega</code>来自动直连或使用代理。</p>
<p>不过对于Mac更方便的是使用<a href="https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html" target="_blank" rel="external">Launchd</a>实现开机自启动。<code>Launchd</code>分为Launch Daemons和Agents，前者为系统级，在系统启动时自动运行，后者为用户级，在用户登录时自动运行。只要在系统特定目录创建Property List文件，系统就会自动加载运行。</p>
<p>这里我们使用Launch Agent，创建<code>plist</code>文件<code>/Library/LaunchAgents/local.shadowsocks.proxy.plist</code>，内容如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="meta">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>Label<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>local.shadowsocks.proxy<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>ProgramArguments<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">array</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">string</span>&gt;</span>/usr/local/bin/sslocal<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">string</span>&gt;</span>-c<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">string</span>&gt;</span>config.json<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">array</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>StandardOutPath<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>info.log<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>StandardErrorPath<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>error.log<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>WorkingDirectory<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>/Users/Jinde/shadowsocks<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>RunAtLoad<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>KeepAlive<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></div></pre></td></tr></table></figure>
<p>注意正确配置<code>ProgramArguments</code>和<code>WorkingDirectory</code>。<code>WorkingDirectory</code>为Shadowsocks配置文件所在目录。之后每次重启，<code>sslocal</code>都会自动运行。完毕。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Shadowsocks简介&quot;&gt;&lt;a href=&quot;#Shadowsocks简介&quot; class=&quot;headerlink&quot; title=&quot;Shadowsocks简介&quot;&gt;&lt;/a&gt;Shadowsocks简介&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.co
    
    </summary>
    
    
      <category term="shadowsocks" scheme="http://landys.github.io/tags/shadowsocks/"/>
    
  </entry>
  
</feed>
